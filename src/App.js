import AdminPanel from "./components/AdminPanel";
import LogoutButton from "./components/LogoutButton";
import AppIntro from "./components/AppIntro";
import React, { useState, useEffect } from "react";
import Step1Region from "./steps/Step1Region";
import Step2Season from "./steps/Step2Season";
import Step3Run from "./steps/Step3Run";
import Step4Results from "./steps/Step4Results";

import { onAuthStateChanged } from "firebase/auth";
import { auth } from "./firebase";
import LoginPage from "./components/LoginPage";

export default function App() {
  // ‚úÖ –í—Å—ñ —Ö—É–∫–∏ –≤–∏–∫–ª–∏–∫–∞—é—Ç—å—Å—è –æ–¥—Ä–∞–∑—É –Ω–∞ –ø–æ—á–∞—Ç–∫—É
  const [user, setUser] = useState(null); // üîê –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á
  const [step, setStep] = useState(1);
  const [region, setRegion] = useState(null);
  const [plantingDate, setPlantingDate] = useState("");
  const [harvestDate, setHarvestDate] = useState("");
  const [useForecast, setUseForecast] = useState(false);
  const [diseases, setDiseases] = useState(["lateBlight"]);
  const [result, setResult] = useState(null);

  // üîÅ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, setUser);
    return () => unsubscribe();
  }, []);

  // üîê –Ø–∫—â–æ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π ‚Äî –ø–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–≥—ñ–Ω
  if (!user) return <LoginPage onLogin={setUser} />;

// ‚ùóÔ∏è –¢–≤—ñ–π email —è–∫ "—Å—É–ø–µ—Ä–∞–¥–º—ñ–Ω"
if (user.email === "lashyn.aleksandr@gmail.com") {
  return <AdminPanel />;
}

  // üëâ –§—É–Ω–∫—Ü—ñ—ó –ø–µ—Ä–µ—Ö–æ–¥—É
  const next = () => setStep((s) => Math.min(s + 1, 4));
  const back = () => setStep((s) => Math.max(s - 1, 1));

  return (
    <div className="main-container" style={{ maxWidth: 800, margin: "0 auto", padding: 20 }}>
      
      {/* üîê –ö–Ω–æ–ø–∫–∞ –≤–∏—Ö–æ–¥—É */}
      <div style={{ display: "flex", justifyContent: "flex-end", marginBottom: 10 }}>
        <LogoutButton onLogout={() => setUser(null)} />
      </div>

      {/* üî¢ –ü—Ä–æ–≥—Ä–µ—Å–±–∞—Ä */}
      <ProgressBar step={step} />

      {/* üìò –í—Å—Ç—É–ø–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
      {step === 1 && <AppIntro />}

      {/* –ö—Ä–æ–∫ 1 ‚Äî –í–∏–±—ñ—Ä —Ä–µ–≥—ñ–æ–Ω—É */}
      {step === 1 && (
        <Step1Region region={region} setRegion={setRegion} onNext={next} />
      )}

      {/* –ö—Ä–æ–∫ 2 ‚Äî –°–µ–∑–æ–Ω */}
      {step === 2 && (
        <Step2Season
          plantingDate={plantingDate}
          setPlantingDate={setPlantingDate}
          harvestDate={harvestDate}
          setHarvestDate={setHarvestDate}
          useForecast={useForecast}
          setUseForecast={setUseForecast}
          onNext={({ diseases }) => {
            setDiseases(diseases);
            next();
          }}
          onBack={back}
        />
      )}

      {/* –ö—Ä–æ–∫ 3 ‚Äî –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ */}
      {step === 3 && (
        <Step3Run
          region={region}
          plantingDate={plantingDate}
          harvestDate={harvestDate}
          useForecast={useForecast}
          diseases={diseases}
          onResult={(res) => {
            setResult(res);
            next();
          }}
          onBack={back}
        />
      )}

      {/* –ö—Ä–æ–∫ 4 ‚Äî –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ */}
      {step === 4 && (
        <Step4Results result={result} onRestart={() => setStep(1)} />
      )}
    </div>
  );
}

// üîò –ü—Ä–æ–≥—Ä–µ—Å–±–∞—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
function ProgressBar({ step }) {
  const steps = ["–ú—ñ—Å—Ç–æ", "–°–µ–∑–æ–Ω", "–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫", "–†–µ–∑—É–ª—å—Ç–∞—Ç–∏"];
  return (
    <div style={{ display: "flex", justifyContent: "space-between", marginBottom: 20 }}>
      {steps.map((label, i) => (
        <div
          key={i}
          style={{
            fontWeight: i + 1 === step ? "bold" : "normal",
            color: i + 1 === step ? "#2d6cdf" : "#999",
          }}
        >
          {i + 1}. {label}
        </div>
      ))}
    </div>
  );
}
