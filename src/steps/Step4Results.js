import React, { useState } from "react";
import { parseISO, differenceInDays } from "date-fns";
import "./Step4Results.css";
import * as XLSX from "xlsx";

const productInfo = {
  "–ó–æ—Ä–≤–µ–∫ –Ü–Ω–∫–∞–Ω—Ç—ñ—è": "0,5–ª/–≥–∞",
  "–†–∏–¥–æ–º—ñ–ª –ì–æ–ª–¥": "2,5–∫–≥/–≥–∞",
  "–¢–∞–Ω–æ—Å": "0,6–∫–≥/–≥–∞",
  "–ê–∫—Ä–æ–±–∞—Ç –ú–¶": "2–∫–≥/–≥–∞",
  "–û—Ä–æ–Ω–¥—ñ—Å –£–ª—å—Ç—Ä–∞": "0,4–ª/–≥–∞",
  "–†–∞–Ω–º–∞–Ω –¢–û–ü": "0,5–ª/–≥–∞",
  "–†–µ–≤—É—Å –¢–û–ü": "0,6–ª/–≥–∞",
  "–ö—É—Ä–∑–∞—Ç –†": "2,5–∫–≥/–≥–∞",
  "–Ü–Ω—Ñ—ñ–Ω—ñ—Ç–æ": "1,6–ª/–≥–∞",
  "–õ—É–Ω–∞ –ï–∫—Å–ø—ñ—Ä—ñ—î–Ω—Å": "0,75–ª/–≥–∞",
  "–°—ñ–≥–Ω—É–º": "1,5–∫–≥/–≥–∞",
  "–°–∫–∞–ª–∞": "2–ª/–≥–∞",
  "–¢–µ–ª—å–¥–æ—Ä": "1,5–∫–≥/–≥–∞",
  "–°–∫–æ—Ä": "0,6–ª/–≥–∞",
  "–ù–∞—Ç—ñ–≤–æ": "0,4–∫–≥/–≥–∞",
  "–ú–µ–¥—è–Ω –ï–∫—Å—Ç—Ä–∞": "2–ª/–≥–∞",
  "–ö–∞–∑—É–º—ñ–Ω": "1,5-3–ª/–≥–∞",
  "–°–µ—Ä–µ–Ω–∞–¥–∞": "2–ª/–≥–∞",
};

const productLinks = {
  "–ó–æ—Ä–≤–µ–∫ –Ü–Ω–∫–∞–Ω—Ç—ñ—è": "https://www.corteva.com.ua/products-and-solutions/crop-protection/zorvec-encantia.html",
  "–†–∏–¥–æ–º—ñ–ª –ì–æ–ª–¥": "https://www.syngenta.ua/product/crop-protection/ridomil-gold-mz-68-wg-v-g",
  "–¢–∞–Ω–æ—Å": "https://www.corteva.com.ua/products-and-solutions/crop-protection/tanos.html",
  "–ê–∫—Ä–æ–±–∞—Ç –ú–¶": "https://www.agro.basf.ua/uk/",
  "–û—Ä–æ–Ω–¥—ñ—Å –£–ª—å—Ç—Ä–∞": "https://www.syngenta.ua/product/crop-protection/orondisr-ultra-280-sc-k-s",
  "–†–∞–Ω–º–∞–Ω –¢–û–ü": "https://summit-agro.com.ua/product/zagalnij-katalog-produktiv/ranman-top-ks",
  "–†–µ–≤—É—Å –¢–û–ü": "https://www.syngenta.ua/product/crop-protection/revus-top-500-es-k-s",
  "–ö—É—Ä–∑–∞—Ç –†": "https://www.corteva.com.ua/products-and-solutions/crop-protection/curzate-r.html",
  "–Ü–Ω—Ñ—ñ–Ω—ñ—Ç–æ": "https://www.cropscience.bayer.ua/Products/Fungicides/Infinito.aspx",
  "–õ—É–Ω–∞ –ï–∫—Å–ø—ñ—Ä—ñ—î–Ω—Å": "https://www.cropscience.bayer.ua/Products/Fungicides/LunaExperience.aspx",
  "–°—ñ–≥–Ω—É–º": "https://www.agro.basf.ua/uk",
  "–°–∫–∞–ª–∞": "https://www.cropscience.bayer.ua/Products/Fungicides/Scala.aspx",
  "–¢–µ–ª—å–¥–æ—Ä": "https://www.cropscience.bayer.ua/Products/Fungicides/Teldor.aspx",
  "–°–∫–æ—Ä": "https://www.syngenta.ua/product/crop-protection/skor-250-es-k-e",
  "–ù–∞—Ç—ñ–≤–æ": "https://www.cropscience.bayer.ua/Products/Fungicides/Nativo.aspx",
  "–ú–µ–¥—è–Ω –ï–∫—Å—Ç—Ä–∞": "https://www.summit-agro.com.ua/product/organik-standart/medyan-ekstra-350-sc-ks",
  "–ö–∞–∑—É–º—ñ–Ω": "https://summit-agro.com.ua/product/zagalnij-katalog-produktiv/kazumin-2l",
  "–°–µ—Ä–µ–Ω–∞–¥–∞": "https://www.cropscience.bayer.ua/Products/Fungicides/Serenada.aspx",
};

const rotationProducts = [
  "–ó–æ—Ä–≤–µ–∫ –Ü–Ω–∫–∞–Ω—Ç—ñ—è",
  "–†–∏–¥–æ–º—ñ–ª –ì–æ–ª–¥",
  "–¢–∞–Ω–æ—Å",
  "–ê–∫—Ä–æ–±–∞—Ç –ú–¶",
  "–û—Ä–æ–Ω–¥—ñ—Å –£–ª—å—Ç—Ä–∞",
  "–†–∞–Ω–º–∞–Ω –¢–û–ü",
  "–†–µ–≤—É—Å –¢–û–ü",
  "–ö—É—Ä–∑–∞—Ç –†",
  "–Ü–Ω—Ñ—ñ–Ω—ñ—Ç–æ",
];

const rotationGrayMold = [
  "–õ—É–Ω–∞ –ï–∫—Å–ø—ñ—Ä—ñ—î–Ω—Å",
  "–°—ñ–≥–Ω—É–º",
  "–°–∫–∞–ª–∞",
  "–¢–µ–ª—å–¥–æ—Ä",
  "–°–∫–æ—Ä",
  "–ù–∞—Ç—ñ–≤–æ",
];

const rotationAlternaria = rotationGrayMold;
const rotationBacteriosis = ["–ú–µ–¥—è–Ω –ï–∫—Å—Ç—Ä–∞", "–ö–∞–∑—É–º—ñ–Ω", "–°–µ—Ä–µ–Ω–∞–¥–∞"];

function getAdvancedTreatments(riskDates, minGap = 7, shortGap = 5) {
  const sorted = [...riskDates].map((d) => new Date(d)).sort((a, b) => a - b);
  const selected = [];
  let i = 0;

  while (i < sorted.length) {
    const current = sorted[i];
    if (
      !selected.length ||
      differenceInDays(current, selected[selected.length - 1].date) >= selected[selected.length - 1].gap
    ) {
      let streak = 1;
      let j = i + 1;
      while (j < sorted.length && differenceInDays(sorted[j], sorted[j - 1]) === 1) {
        streak++;
        j++;
      }
      const gap = streak >= 4 ? shortGap : minGap;
      selected.push({ date: current, gap });
    }
    i++;
  }
  return selected;
}

function CardView({ title, entries }) {
  return (
    <div className="card-section">
      <h3>{title}</h3>
      {entries.map((item, i) => (
        <div key={i} className="card">
          <div className="card-index">#{i + 1}</div>
          {Object.entries(item).map(([key, value]) => (
            <div key={key} className="card-row">
              <strong>{key}:</strong> {value}
            </div>
          ))}
        </div>
      ))}
    </div>
  );
}

export default function Step4Results({ result, onRestart }) {
  const [showIntegrated, setShowIntegrated] = useState(false);

  if (!result) return <p>–î–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ</p>;

  const { sprayDates, diseaseSummary, suitableHours = {} } = result;

  const sprayData = sprayDates.map((d, i) => {
    const cur = parseISO(d.split(".").reverse().join("-"));
    const prev = i > 0 ? parseISO(sprayDates[i - 1].split(".").reverse().join("-")) : null;
    const gap = prev ? `${differenceInDays(cur, prev)} –¥—ñ–± –ø—ñ—Å–ª—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ—ó` : "‚Äî";
    const product = rotationProducts[i % rotationProducts.length];
    const recommendedHours = suitableHours[d] || [];

    return {
      –î–∞—Ç–∞: d,
      –ü—Ä–µ–ø–∞—Ä–∞—Ç: `${product} (${productInfo[product] || "‚Äî"})`,
      –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è: productLinks[product]
        ? <a href={productLinks[product]} target="_blank" rel="noreferrer">–ü–µ—Ä–µ–π—Ç–∏</a>
        : "‚Äî",
      –Ü–Ω—Ç–µ—Ä–≤–∞–ª: gap,
      "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –≥–æ–¥–∏–Ω–∏": recommendedHours.length ? recommendedHours.join(", ") : "‚Äî",
    };
  });

  const diseaseCardsGrouped = diseaseSummary?.map(({ name, riskDates }) => {
    const rotation = {
      "–°—ñ—Ä–∞ –≥–Ω–∏–ª—å": rotationGrayMold,
      "–ê–ª—å—Ç–µ—Ä–Ω–∞—Ä—ñ–æ–∑": rotationAlternaria,
      "–ë–∞–∫—Ç–µ—Ä—ñ–æ–∑": rotationBacteriosis,
    }[name] || [];

    const treatments = getAdvancedTreatments(riskDates);
    const entries = treatments.map((item, i) => {
      const product = rotation[i % rotation.length];
      const dateStr = item.date.toLocaleDateString("uk-UA");
      const recommendedHours = suitableHours[dateStr] || [];

      return {
        –î–∞—Ç–∞: dateStr,
        –ü—Ä–µ–ø–∞—Ä–∞—Ç: `${product} (${productInfo[product] || "‚Äî"})`,
        –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è: productLinks[product]
          ? <a href={productLinks[product]} target="_blank" rel="noreferrer">–ü–µ—Ä–µ–π—Ç–∏</a>
          : "‚Äî",
        –Ü–Ω—Ç–µ—Ä–≤–∞–ª:
          i === 0 ? "‚Äî" : `${differenceInDays(item.date, treatments[i - 1].date)} –¥—ñ–± –ø—ñ—Å–ª—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ—ó`,
        "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –≥–æ–¥–∏–Ω–∏": recommendedHours.length ? recommendedHours.join(", ") : "‚Äî",
      };
    });

    return { name, entries };
  });

  const integratedSystem = [
    ...sprayData.map(({ –î–∞—Ç–∞, –ü—Ä–µ–ø–∞—Ä–∞—Ç, –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è }) => ({ –î–∞—Ç–∞, –ü—Ä–µ–ø–∞—Ä–∞—Ç, –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è }))
  ];

  diseaseCardsGrouped?.forEach(({ entries }) => {
    entries.forEach(({ –î–∞—Ç–∞, –ü—Ä–µ–ø–∞—Ä–∞—Ç, –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è }) => {
      integratedSystem.push({ –î–∞—Ç–∞, –ü—Ä–µ–ø–∞—Ä–∞—Ç, –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è });
    });
  });

  integratedSystem.sort(
    (a, b) => parseISO(a.–î–∞—Ç–∞.split(".").reverse().join("-")) - parseISO(b.–î–∞—Ç–∞.split(".").reverse().join("-"))
  );

  const exportToExcel = () => {
    const simplified = integratedSystem.map(({ –î–∞—Ç–∞, –ü—Ä–µ–ø–∞—Ä–∞—Ç, –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è }) => ({
      –î–∞—Ç–∞,
      –ü—Ä–µ–ø–∞—Ä–∞—Ç,
      –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è: typeof –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è === "string"
  ? –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è
  : (–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è?.props?.href || "")

    }));
    const ws = XLSX.utils.json_to_sheet(simplified);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, "–ó–∞—Ö–∏—Å—Ç");
    XLSX.writeFile(wb, "–Ü–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–∞_—Å–∏—Å—Ç–µ–º–∞_–∑–∞—Ö–∏—Å—Ç—É.xlsx");
  };

  return (
    <div className="container">
      <h2>–ö—Ä–æ–∫ 4: –†–µ–∑—É–ª—å—Ç–∞—Ç–∏</h2>
      <p className="description">
        –ù–∏–∂—á–µ –ø–æ–∫–∞–∑–∞–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –¥–∞—Ç–∏ –æ–±—Ä–æ–±–∫–∏. –í–∏ –º–æ–∂–µ—Ç–µ —Å—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω—É —Å–∏—Å—Ç–µ–º—É –∑–∞—Ö–∏—Å—Ç—É.
      </p>

      <button className="toggle-button" onClick={() => setShowIntegrated(!showIntegrated)}>
        {showIntegrated ? "üîΩ –°—Ö–æ–≤–∞—Ç–∏ —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω—É —Å–∏—Å—Ç–µ–º—É" : "üß™ –°—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω—É —Å–∏—Å—Ç–µ–º—É –∑–∞—Ö–∏—Å—Ç—É"}
      </button>

      {showIntegrated && (
        <>
          <CardView title="–Ü–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –∑–∞—Ö–∏—Å—Ç—É" entries={integratedSystem} />
          <button onClick={exportToExcel} className="toggle-button">‚¨áÔ∏è –ï–∫—Å–ø–æ—Ä—Ç –≤ Excel</button>
        </>
      )}

      {!showIntegrated && (
        <>
          <CardView title="–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –≤–Ω–µ—Å–µ–Ω–Ω—è (–ø—Ä–æ—Ç–∏ —Ñ—ñ—Ç–æ—Ñ—Ç–æ—Ä–æ–∑—É)" entries={sprayData} />
          {diseaseCardsGrouped?.map(({ name, entries }) => (
            <CardView
              key={name}
              title={`–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –≤–Ω–µ—Å–µ–Ω–Ω—è (–ø—Ä–æ—Ç–∏: ${name})`}
              entries={entries}
            />
          ))}
        </>
      )}

      <button className="restart-button" onClick={onRestart}>
        üîÑ –ü–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É
      </button>
    </div>
  );
}
