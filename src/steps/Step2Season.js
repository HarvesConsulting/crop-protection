import React, { useState } from "react";

export default function Step2Season({
  plantingDate,
  setPlantingDate,
  harvestDate,
  setHarvestDate,
  useForecast,
  setUseForecast,
  onNext,
  onBack,
}) {
  const [diseases, setDiseases] = useState(["lateBlight"]);
  const [showInfo, setShowInfo] = useState(false); // üëà —Å—Ç–∞–Ω –¥–ª—è –æ–ø–∏—Å—É

  const toggleDisease = (disease) => {
    setDiseases((prev) =>
      prev.includes(disease)
        ? prev.filter((d) => d !== disease)
        : [...prev, disease]
    );
  };

  return (
    <div>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ + —ñ–∫–æ–Ω–∫–∞ ‚ÑπÔ∏è */}
      <h2 style={{ display: "flex", alignItems: "center", gap: 10 }}>
        –ö—Ä–æ–∫ 2: –î–∞–Ω—ñ –ø—Ä–æ —Å–µ–∑–æ–Ω{" "}
        <span
          onClick={() => setShowInfo(!showInfo)}
          style={{
            cursor: "pointer",
            fontSize: "18px",
            color: "#2d6cdf",
            userSelect: "none"
          }}
          title={showInfo ? "–°—Ö–æ–≤–∞—Ç–∏ –æ–ø–∏—Å" : "–ü–æ–∫–∞–∑–∞—Ç–∏ –æ–ø–∏—Å"}
        >
          ‚ÑπÔ∏è
        </span>
      </h2>

      {/* –û–ø–∏—Å ‚Äî –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è –ª–∏—à–µ —è–∫—â–æ showInfo === true */}
      {showInfo && (
        <p className="text-sm text-gray-600 mb-4" style={{ marginTop: -10 }}>
          –í–∫–∞–∂—ñ—Ç—å –ø–æ—á–∞—Ç–∫–æ–≤—É –¥–∞—Ç—É —Å–µ–∑–æ–Ω—É –∞–±–æ –¥–∞—Ç—É –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –æ–±—Ä–æ–±–∫–∏ —Ñ—É–Ω–≥—ñ—Ü–∏–¥–æ–º —Ç–∞ –æ–±–µ—Ä—ñ—Ç—å —Ä–µ–∂–∏–º: –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 14 –¥–Ω—ñ–≤ –∞–±–æ –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è –∑–∞ –∞—Ä—Ö—ñ–≤–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏. –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º —Å—Ç–æ—ó—Ç—å —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–æ–≥–Ω–æ–∑—É –Ω–∞ 14 –¥—ñ–±. –î–ª—è –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è —Å–µ–∑–æ–Ω–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ –∑–∞—Ö–∏—Å—Ç—É –æ–±–µ—Ä—ñ—Ç—å "–í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —ñ—Å—Ç–æ—Ä–∏—á–Ω—É –º–æ–¥–µ–ª—å".
        </p>
      )}

      {/* –ü–µ—Ä–µ–º–∏–∫–∞—á —Ä–µ–∂–∏–º—É */}
      <label style={{ display: "block", marginBottom: 12 }}>
        <input
          type="checkbox"
          checked={useForecast}
          onChange={(e) => setUseForecast(e.target.checked)}
        />{" "}
        –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —ñ—Å—Ç–æ—Ä–∏—á–Ω—É –º–æ–¥–µ–ª—å (NASA POWER)
      </label>

      {/* –î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É */}
      <div style={{ marginBottom: 12 }}>
        <label>–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É –≤–µ–≥–µ—Ç–∞—Ü—ñ—ó –∞–±–æ –¥–∞—Ç–∞ –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –æ–±—Ä–æ–±–∫–∏:</label>
        <input
          type="date"
          value={plantingDate}
          onChange={(e) => setPlantingDate(e.target.value)}
          style={{
            display: "block",
            padding: "10px",
            width: "100%",
            fontSize: "16px",
            marginTop: "4px",
          }}
        />
      </div>

      {/* –î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è ‚Äî —è–∫—â–æ –æ–±—Ä–∞–Ω–æ —ñ—Å—Ç–æ—Ä–∏—á–Ω—É –º–æ–¥–µ–ª—å */}
      {useForecast && (
        <div style={{ marginBottom: 12 }}>
          <label>–î–∞—Ç–∞ –∑–±–æ—Ä—É –≤—Ä–æ–∂–∞—é:</label>
          <input
            type="date"
            value={harvestDate}
            onChange={(e) => setHarvestDate(e.target.value)}
            style={{
              display: "block",
              padding: "10px",
              width: "100%",
              fontSize: "16px",
              marginTop: "4px",
            }}
          />
        </div>
      )}

      {/* –í–∏–±—ñ—Ä —Ö–≤–æ—Ä–æ–± */}
      <div style={{ marginBottom: 20 }}>
        <label><strong>–û–±–µ—Ä—ñ—Ç—å —Ö–≤–æ—Ä–æ–±–∏ –¥–ª—è –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è:</strong></label>
        <div style={{ paddingLeft: 10, marginTop: 8 }}>
          {[
            { id: "lateBlight", name: "–§—ñ—Ç–æ—Ñ—Ç–æ—Ä–æ–∑" },
            { id: "grayMold", name: "–°—ñ—Ä–∞ –≥–Ω–∏–ª—å" },
            { id: "alternaria", name: "–ê–ª—å—Ç–µ—Ä–Ω–∞—Ä—ñ–æ–∑" },
            { id: "bacteriosis", name: "–ë–∞–∫—Ç–µ—Ä—ñ–æ–∑" },
          ].map((disease) => (
            <label key={disease.id} style={{ display: "block", marginBottom: 6 }}>
              <input
                type="checkbox"
                checked={diseases.includes(disease.id)}
                onChange={() => toggleDisease(disease.id)}
              />{" "}
              {disease.name}
            </label>
          ))}
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ */}
      <div style={{ display: "flex", gap: 10, marginTop: 16 }}>
        <button
          onClick={onBack}
          style={{
            padding: "10px 18px",
            fontSize: "15px",
            background: "#eee",
            borderRadius: "6px",
            cursor: "pointer",
          }}
        >
          –ù–∞–∑–∞–¥
        </button>

        <button
          onClick={() => onNext({ diseases })}
          disabled={!plantingDate || (useForecast && !harvestDate)}
          style={{
            padding: "10px 18px",
            fontSize: "15px",
            background: (!plantingDate || (useForecast && !harvestDate)) ? "#ccc" : "#2d6cdf",
            color: "#fff",
            borderRadius: "6px",
            cursor: (!plantingDate || (useForecast && !harvestDate)) ? "not-allowed" : "pointer",
          }}
        >
          –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏
        </button>
      </div>
    </div>
  );
}
