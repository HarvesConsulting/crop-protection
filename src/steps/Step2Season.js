import React, { useState } from "react";

export default function Step2Season({
  plantingDate,
  setPlantingDate,
  harvestDate,
  setHarvestDate,
  useForecast,
  setUseForecast,
  onNext,
  onBack,
}) {
  const [diseases, setDiseases] = useState(["lateBlight"]); // –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º ‚Äî —Ñ—ñ—Ç–æ—Ñ—Ç–æ—Ä–∞

  const toggleDisease = (disease) => {
    setDiseases((prev) =>
      prev.includes(disease)
        ? prev.filter((d) => d !== disease)
        : [...prev, disease]
    );
  };

  return (
    <div>
      <h2>–ö—Ä–æ–∫ 2: –î–∞–Ω—ñ –ø—Ä–æ —Å–µ–∑–æ–Ω</h2>
      <p className="text-sm text-gray-600 mb-4">
        –í–∫–∞–∂—ñ—Ç—å –ø–æ—á–∞—Ç–∫–æ–≤—É –¥–∞—Ç—É —Å–µ–∑–æ–Ω—É –∞–±–æ –¥–∞—Ç—É –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –æ–±—Ä–æ–±–∫–∏ —Ñ—É–Ω–≥—ñ—Ü–∏–¥–æ–º —Ç–∞ –æ–±–µ—Ä—ñ—Ç—å —Ä–µ–∂–∏–º: –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 14 –¥–Ω—ñ–≤ –∞–±–æ –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è –∑–∞ –∞—Ä—Ö—ñ–≤–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏.
      </p>

      {/* –ü–µ—Ä–µ–º–∏–∫–∞—á —Ä–µ–∂–∏–º—É */}
      <label style={{ display: "block", marginBottom: 12 }}>
        <input
          type="checkbox"
          checked={useForecast}
          onChange={(e) => setUseForecast(e.target.checked)}
        />{" "}
        –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —ñ—Å—Ç–æ—Ä–∏—á–Ω—É –º–æ–¥–µ–ª—å (NASA POWER)
      </label>

      {/* –î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É */}
      <div style={{ marginBottom: 12 }}>
        <label>–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É –≤–µ–≥–µ—Ç–∞—Ü—ñ—ó –∞–±–æ –¥–∞—Ç–∞ –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –æ–±—Ä–æ–±–∫–∏:</label>
        <input
          type="date"
          value={plantingDate}
          onChange={(e) => setPlantingDate(e.target.value)}
          style={{
            display: "block",
            padding: "10px",
            width: "100%",
            fontSize: "16px",
            marginTop: "4px",
          }}
        />
      </div>

      {/* –î–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è ‚Äî —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –º–æ–¥–µ–ª—å */}
      {useForecast && (
        <div style={{ marginBottom: 12 }}>
          <label>–î–∞—Ç–∞ –∑–±–æ—Ä—É –≤—Ä–æ–∂–∞—é:</label>
          <input
            type="date"
            value={harvestDate}
            onChange={(e) => setHarvestDate(e.target.value)}
            style={{
              display: "block",
              padding: "10px",
              width: "100%",
              fontSize: "16px",
              marginTop: "4px",
            }}
          />
        </div>
      )}

      {/* üîΩ –í–∏–±—ñ—Ä —Ö–≤–æ—Ä–æ–± */}
      <div style={{ marginBottom: 20 }}>
        <label><strong>–û–±–µ—Ä—ñ—Ç—å —Ö–≤–æ—Ä–æ–±–∏ –¥–ª—è –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è:</strong></label>
        <div style={{ paddingLeft: 10, marginTop: 8 }}>
          <label>
            <input
              type="checkbox"
              checked={diseases.includes("lateBlight")}
              onChange={() => toggleDisease("lateBlight")}
            />{" "}
            –§—ñ—Ç–æ—Ñ—Ç–æ—Ä–æ–∑
          </label>
          <br />
          <label>
            <input
              type="checkbox"
              checked={diseases.includes("grayMold")}
              onChange={() => toggleDisease("grayMold")}
            />{" "}
            –°—ñ—Ä–∞ –≥–Ω–∏–ª—å
          </label>
          <br />
          <label>
            <input
              type="checkbox"
              checked={diseases.includes("alternaria")}
              onChange={() => toggleDisease("alternaria")}
            />{" "}
            –ê–ª—å—Ç–µ—Ä–Ω–∞—Ä—ñ–æ–∑
          </label>
          <br />
          <label>
            <input
              type="checkbox"
              checked={diseases.includes("bacteriosis")}
              onChange={() => toggleDisease("bacteriosis")}
            />{" "}
            –ë–∞–∫—Ç–µ—Ä—ñ–æ–∑
          </label>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó */}
      <div style={{ display: "flex", gap: 10, marginTop: 16 }}>
        <button
          onClick={onBack}
          style={{
            padding: "10px 18px",
            fontSize: "15px",
            background: "#eee",
            borderRadius: "6px",
            cursor: "pointer",
          }}
        >
          –ù–∞–∑–∞–¥
        </button>

        <button
          onClick={() => onNext({ diseases })}
          disabled={!plantingDate || (useForecast && !harvestDate)}
          style={{
            padding: "10px 18px",
            fontSize: "15px",
            background: (!plantingDate || (useForecast && !harvestDate)) ? "#ccc" : "#2d6cdf",
            color: "#fff",
            borderRadius: "6px",
            cursor: (!plantingDate || (useForecast && !harvestDate)) ? "not-allowed" : "pointer",
          }}
        >
          –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏
        </button>
      </div>
    </div>
  );
}
